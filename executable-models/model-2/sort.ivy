#lang ivy1.7

type id_t
type set_t
type val_t

# This id_t contains 4 nodes instead of 3.
# I specifically chose to do this because if this is
# replaced with `id_t -> {0..2}`, Ivy throws.
# With `make` and `make fuzz`, it shows `AttributeError: 'EnumeratedSort' object has no attribute 'startswith'`.
# With `make proof`, it shows `error: Cannot cast "0:id_t" to native sort id_t`.
# Node 3 is not a member of any set, so any operation with Node 3 should be a no-op.
interpret id_t -> bv[2]
interpret set_t -> bv[3]
interpret val_t -> bv[1]

relation member(X:id_t, S:set_t)
relation is_quorum(S:set_t)
relation is_v_blocking(V:id_t, S:set_t)

isolate sort_initialization =
{
    after init {
        # Generated by member.py.
        member(V, S) := false;
        member(0, 1) := true;
        member(0, 3) := true;
        member(0, 5) := true;
        member(0, 7) := true;
        member(1, 2) := true;
        member(1, 3) := true;
        member(1, 6) := true;
        member(1, 7) := true;
        member(2, 4) := true;
        member(2, 5) := true;
        member(2, 6) := true;
        member(2, 7) := true;

        is_quorum(S) := false;
        is_quorum(3) := true;
        is_quorum(5) := true;
        is_quorum(6) := true;
        is_quorum(7) := true;

        is_v_blocking(V, S) := true;
        is_v_blocking(0, 0) := false;
        is_v_blocking(0, 2) := false;
        is_v_blocking(0, 4) := false;
        is_v_blocking(1, 0) := false;
        is_v_blocking(1, 1) := false;
        is_v_blocking(1, 4) := false;
        is_v_blocking(2, 0) := false;
        is_v_blocking(2, 1) := false;
        is_v_blocking(2, 2) := false;
    }
}
